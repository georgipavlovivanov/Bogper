/*
 * This file is generated by jOOQ.
 */
package com.example.msbogper.jooq.information_schema.tables.pojos;


import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CrossReferences implements Serializable {

    private static final long serialVersionUID = 1L;

    private String pktableCatalog;
    private String pktableSchema;
    private String pktableName;
    private String pkcolumnName;
    private String fktableCatalog;
    private String fktableSchema;
    private String fktableName;
    private String fkcolumnName;
    private Short  ordinalPosition;
    private Short  updateRule;
    private Short  deleteRule;
    private String fkName;
    private String pkName;
    private Short  deferrability;

    public CrossReferences() {}

    public CrossReferences(CrossReferences value) {
        this.pktableCatalog = value.pktableCatalog;
        this.pktableSchema = value.pktableSchema;
        this.pktableName = value.pktableName;
        this.pkcolumnName = value.pkcolumnName;
        this.fktableCatalog = value.fktableCatalog;
        this.fktableSchema = value.fktableSchema;
        this.fktableName = value.fktableName;
        this.fkcolumnName = value.fkcolumnName;
        this.ordinalPosition = value.ordinalPosition;
        this.updateRule = value.updateRule;
        this.deleteRule = value.deleteRule;
        this.fkName = value.fkName;
        this.pkName = value.pkName;
        this.deferrability = value.deferrability;
    }

    public CrossReferences(
        String pktableCatalog,
        String pktableSchema,
        String pktableName,
        String pkcolumnName,
        String fktableCatalog,
        String fktableSchema,
        String fktableName,
        String fkcolumnName,
        Short  ordinalPosition,
        Short  updateRule,
        Short  deleteRule,
        String fkName,
        String pkName,
        Short  deferrability
    ) {
        this.pktableCatalog = pktableCatalog;
        this.pktableSchema = pktableSchema;
        this.pktableName = pktableName;
        this.pkcolumnName = pkcolumnName;
        this.fktableCatalog = fktableCatalog;
        this.fktableSchema = fktableSchema;
        this.fktableName = fktableName;
        this.fkcolumnName = fkcolumnName;
        this.ordinalPosition = ordinalPosition;
        this.updateRule = updateRule;
        this.deleteRule = deleteRule;
        this.fkName = fkName;
        this.pkName = pkName;
        this.deferrability = deferrability;
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.CROSS_REFERENCES.PKTABLE_CATALOG</code>.
     */
    public String getPktableCatalog() {
        return this.pktableCatalog;
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.CROSS_REFERENCES.PKTABLE_CATALOG</code>.
     */
    public void setPktableCatalog(String pktableCatalog) {
        this.pktableCatalog = pktableCatalog;
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.CROSS_REFERENCES.PKTABLE_SCHEMA</code>.
     */
    public String getPktableSchema() {
        return this.pktableSchema;
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.CROSS_REFERENCES.PKTABLE_SCHEMA</code>.
     */
    public void setPktableSchema(String pktableSchema) {
        this.pktableSchema = pktableSchema;
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.CROSS_REFERENCES.PKTABLE_NAME</code>.
     */
    public String getPktableName() {
        return this.pktableName;
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.CROSS_REFERENCES.PKTABLE_NAME</code>.
     */
    public void setPktableName(String pktableName) {
        this.pktableName = pktableName;
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.CROSS_REFERENCES.PKCOLUMN_NAME</code>.
     */
    public String getPkcolumnName() {
        return this.pkcolumnName;
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.CROSS_REFERENCES.PKCOLUMN_NAME</code>.
     */
    public void setPkcolumnName(String pkcolumnName) {
        this.pkcolumnName = pkcolumnName;
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.CROSS_REFERENCES.FKTABLE_CATALOG</code>.
     */
    public String getFktableCatalog() {
        return this.fktableCatalog;
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.CROSS_REFERENCES.FKTABLE_CATALOG</code>.
     */
    public void setFktableCatalog(String fktableCatalog) {
        this.fktableCatalog = fktableCatalog;
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.CROSS_REFERENCES.FKTABLE_SCHEMA</code>.
     */
    public String getFktableSchema() {
        return this.fktableSchema;
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.CROSS_REFERENCES.FKTABLE_SCHEMA</code>.
     */
    public void setFktableSchema(String fktableSchema) {
        this.fktableSchema = fktableSchema;
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.CROSS_REFERENCES.FKTABLE_NAME</code>.
     */
    public String getFktableName() {
        return this.fktableName;
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.CROSS_REFERENCES.FKTABLE_NAME</code>.
     */
    public void setFktableName(String fktableName) {
        this.fktableName = fktableName;
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.CROSS_REFERENCES.FKCOLUMN_NAME</code>.
     */
    public String getFkcolumnName() {
        return this.fkcolumnName;
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.CROSS_REFERENCES.FKCOLUMN_NAME</code>.
     */
    public void setFkcolumnName(String fkcolumnName) {
        this.fkcolumnName = fkcolumnName;
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.CROSS_REFERENCES.ORDINAL_POSITION</code>.
     */
    public Short getOrdinalPosition() {
        return this.ordinalPosition;
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.CROSS_REFERENCES.ORDINAL_POSITION</code>.
     */
    public void setOrdinalPosition(Short ordinalPosition) {
        this.ordinalPosition = ordinalPosition;
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.CROSS_REFERENCES.UPDATE_RULE</code>.
     */
    public Short getUpdateRule() {
        return this.updateRule;
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.CROSS_REFERENCES.UPDATE_RULE</code>.
     */
    public void setUpdateRule(Short updateRule) {
        this.updateRule = updateRule;
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.CROSS_REFERENCES.DELETE_RULE</code>.
     */
    public Short getDeleteRule() {
        return this.deleteRule;
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.CROSS_REFERENCES.DELETE_RULE</code>.
     */
    public void setDeleteRule(Short deleteRule) {
        this.deleteRule = deleteRule;
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.CROSS_REFERENCES.FK_NAME</code>.
     */
    public String getFkName() {
        return this.fkName;
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.CROSS_REFERENCES.FK_NAME</code>.
     */
    public void setFkName(String fkName) {
        this.fkName = fkName;
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.CROSS_REFERENCES.PK_NAME</code>.
     */
    public String getPkName() {
        return this.pkName;
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.CROSS_REFERENCES.PK_NAME</code>.
     */
    public void setPkName(String pkName) {
        this.pkName = pkName;
    }

    /**
     * Getter for <code>INFORMATION_SCHEMA.CROSS_REFERENCES.DEFERRABILITY</code>.
     */
    public Short getDeferrability() {
        return this.deferrability;
    }

    /**
     * Setter for <code>INFORMATION_SCHEMA.CROSS_REFERENCES.DEFERRABILITY</code>.
     */
    public void setDeferrability(Short deferrability) {
        this.deferrability = deferrability;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("CrossReferences (");

        sb.append(pktableCatalog);
        sb.append(", ").append(pktableSchema);
        sb.append(", ").append(pktableName);
        sb.append(", ").append(pkcolumnName);
        sb.append(", ").append(fktableCatalog);
        sb.append(", ").append(fktableSchema);
        sb.append(", ").append(fktableName);
        sb.append(", ").append(fkcolumnName);
        sb.append(", ").append(ordinalPosition);
        sb.append(", ").append(updateRule);
        sb.append(", ").append(deleteRule);
        sb.append(", ").append(fkName);
        sb.append(", ").append(pkName);
        sb.append(", ").append(deferrability);

        sb.append(")");
        return sb.toString();
    }
}
